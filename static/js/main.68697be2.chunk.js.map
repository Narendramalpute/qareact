{"version":3,"sources":["Component/Login.js","Component/MenuList.js","Component/Header.js","Component/Home.js","App.js","reportWebVitals.js","index.js"],"names":["Login","useState","mail","setMail","pwd","setPwd","firstname","setFirstName","lastname","setLastName","designation","setDesignation","email","setEmail","password","setPassword","history","useHistory","useEffect","localStorage","getItem","push","signup","e","a","preventDefault","item","console","warn","fetch","method","body","JSON","stringify","header","res","json","setItem","className","Container","Row","Col","Card","Header","Form","Group","as","Label","column","sm","Control","type","placeholder","onChange","target","value","Check","label","Button","onClick","axios","url","data","then","message","responseData","catch","log","MenuList","title","clicked","setClicked","menuList","map","index","exact","to","activeClassName","Home","style","width","Body","variant","App","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.68697be2.chunk.js","sourcesContent":["\r\nimport React, { useState, useEffect } from 'react';\r\nimport '../Login.css'\r\n// import Validation from '../Component/Validation'\r\nimport { Container, Row, Col, Card, Button, Form } from 'react-bootstrap';\r\nimport { useHistory } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\n\r\n\r\n\r\nfunction Login() {\r\n    // const [values, setValues] = useState({\r\n    //     fullname: \"\",\r\n    //     lastname: \"\",\r\n    //     designation: \"\",\r\n    //     email: \"\",\r\n    //     password: \"\"\r\n    // });\r\n\r\n\r\n    const [mail, setMail] = useState(\"\");\r\n    const [pwd, setPwd] = useState(\"\");\r\n\r\n    const [firstname, setFirstName] = useState(\"\");\r\n    const [lastname, setLastName] = useState(\"\");\r\n    const [designation, setDesignation] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n\r\n    const history = useHistory();\r\n    useEffect(() => {\r\n        if (localStorage.getItem('user-info')) {\r\n            history.push(\"\")\r\n        }\r\n    }, [])\r\n\r\n    // const [errors, setErrors] = useState({});\r\n\r\n    const signup = async e => {\r\n        e.preventDefault();\r\n        let item = [firstname, lastname, designation, email, password];\r\n        console.warn(item)\r\n        let res = await fetch(\"https://localhost:44396/api/Register/AddRegister\", {\r\n            method: 'POST',\r\n            body: JSON.stringify(item),\r\n            header: {\r\n                \"Content-Type\": 'application/json',\r\n                \"Accept\": 'application/json'\r\n            }\r\n        });\r\n        res = await res.json()\r\n        localStorage.setItem(\"user-info\", JSON.stringify(res))\r\n        history.push(\"\");\r\n\r\n    }\r\n\r\n\r\n    // const siginin = async e => {\r\n\r\n    //     let item = [mail, pwd];\r\n    //     let result = await fetch(\"https://localhost:44396/api/Login/AddUser\", {\r\n    //         method: 'POST',\r\n    //         body: JSON.stringify(item),\r\n    //         header: {\r\n    //             \"Content-Type\": 'application/json',\r\n    //             \"Accept\": 'application/json'\r\n    //         }\r\n    //     });\r\n    //     result = await result.json()\r\n    //     localStorage.setItem(\"user-info\", JSON.stringify(result))\r\n    //     history.push(\"\");\r\n    // }\r\n\r\n    function siginin  ()  {\r\n        debugger;\r\n        // let self = this;\r\n\r\n        axios({\r\n            method: \"post\",\r\n            url: \"https://localhost:44396/api/Login/AddUser\",\r\n            // headers: authHeader(),\r\n            data:{\r\n                email:mail,\r\n                password:pwd\r\n            } \r\n            \r\n        })\r\n            .then(function (res) {\r\n                debugger;\r\n                let status = res.data.message;\r\n                let data = res.data.responseData;\r\n                if (status === \"Success\") {\r\n                    // self.setState({\r\n                    //     subscriptionTypePeriod: data,\r\n                    // });\r\n                } else {\r\n                    // self.setState({\r\n                    //     subscriptionTypePeriod: [],\r\n                    // });\r\n                }\r\n            })\r\n            .catch((data) => {\r\n                console.log(data);\r\n            });\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            <div className=\"header\">\r\n                <span >Q&A</span>\r\n            </div>\r\n            <div className=\"container\">\r\n                <br />  <br />  <br />\r\n                <Container>\r\n                    <Row  >\r\n                        {/* New Register User */}\r\n\r\n                        <Col >\r\n                            <Card>\r\n                                <Card.Header className=\"formheader\">Register</Card.Header>\r\n                                <div className=\"register\">\r\n                                    <br />\r\n                                    <Form>\r\n                                        <Form.Group as={Row} >\r\n                                            <Form.Label column sm=\"4\" className=\"label\">\r\n                                                FirstName :\r\n                                            </Form.Label>\r\n                                            <Col sm=\"8\">\r\n                                                <Form.Control className=\"textbox\" type=\"text\" placeholder=\"Enter Your First Name\" onChange={(e) => setFirstName(e.target.value)} />\r\n                                                {/* {errors.fullname && <p className=\"error\">{errors.fullname}</p>} */}\r\n\r\n                                            </Col>\r\n                                        </Form.Group>\r\n                                        <br />\r\n                                        <Form.Group as={Row} >\r\n                                            <Form.Label column sm=\"4\" className=\"label\">\r\n                                                LastName :\r\n                                            </Form.Label>\r\n                                            <Col sm=\"8\">\r\n                                                <Form.Control className=\"textbox\" type=\"text\" placeholder=\"Enter Your Last Name\" onChange={(e) => setLastName(e.target.value)} />\r\n                                                {/* {errors.lastname && <p className=\"error\">{errors.lastname}</p>} */}\r\n\r\n                                            </Col>\r\n                                        </Form.Group>\r\n                                        <br />\r\n\r\n                                        <Form.Group as={Row} >\r\n                                            <Form.Label column sm=\"4\" className=\"label\">\r\n                                                Designation :\r\n                                            </Form.Label>\r\n                                            <Col sm=\"8\">\r\n                                                <Form.Control className=\"textbox\" type=\"text\" placeholder=\"Enter Your Designation\" onChange={(e) => setDesignation(e.target.value)} />\r\n                                                {/* {errors.designation && <p className=\"error\">{errors.designation}</p>} */}\r\n\r\n                                            </Col>\r\n                                        </Form.Group>\r\n                                        <br />\r\n                                        <Form.Group as={Row} >\r\n                                            <Form.Label column sm=\"4\" className=\"label\">\r\n                                                Email :\r\n                                            </Form.Label>\r\n                                            <Col sm=\"8\">\r\n                                                <Form.Control className=\"textbox\" type=\"text\" placeholder=\"Enter Your Email Id\" onChange={(e) => setEmail(e.target.value)} />\r\n                                                {/* {errors.email && <p className=\"error\">{errors.email}</p>} */}\r\n                                            </Col>\r\n                                        </Form.Group>\r\n                                        <br />\r\n\r\n                                        <Form.Group as={Row} >\r\n                                            <Form.Label column sm=\"4\" className=\"label\">\r\n                                                Password :\r\n                                            </Form.Label>\r\n                                            <Col sm=\"8\">\r\n                                                <Form.Control className=\"textbox\" type=\"password\" placeholder=\"Enter Your Password\" onChange={(e) => setPassword(e.target.value)} />\r\n                                                {/* {errors.password && <p className=\"error\">{errors.password}</p>} */}\r\n\r\n                                            </Col>\r\n                                        </Form.Group>\r\n                                        <br />\r\n                                        <Form.Group className=\"remember\">\r\n                                            <Form.Check column sm=\"2\" type=\"checkbox\" label=\"Remember Me\" />\r\n                                        </Form.Group>\r\n                                        <br />\r\n                                        <Button className=\"button\" onClick={e => signup(e)}>\r\n                                            Login\r\n                                        </Button>\r\n                                        <br /> <br />\r\n                                    </Form>\r\n                                </div>\r\n                            </Card>\r\n                        </Col>\r\n\r\n\r\n                        {/* Login Users  */}\r\n\r\n                        <Col>\r\n\r\n                            <Card >\r\n                                <Card.Header className=\"formheader\">Login</Card.Header>\r\n                                <div className=\"register\">\r\n                                    <br />\r\n                                    <Form>\r\n                                        <Form.Group as={Row} >\r\n                                            <Form.Label column sm=\"4\" className=\"label\">\r\n                                                Email :\r\n                                            </Form.Label>\r\n                                            <Col sm=\"8\">\r\n                                                <Form.Control className=\"textbox\" type=\"text\" placeholder=\"Enter Your Email Id\" onChange={(e) => setMail(e.target.value)} />\r\n                                            </Col>\r\n                                        </Form.Group>\r\n                                        <br />\r\n                                        <Form.Group as={Row} >\r\n                                            <Form.Label column sm=\"4\" className=\"label\">\r\n                                                Password :\r\n                                            </Form.Label>\r\n                                            <Col sm=\"8\">\r\n                                                <Form.Control className=\"textbox\" type=\"password\" placeholder=\"Enter Your Password\" onChange={(e) => setPwd(e.target.value)} />\r\n                                            </Col>\r\n                                        </Form.Group>\r\n                                        <br />\r\n                                        <Form.Group className=\"remember\">\r\n                                            <Form.Check column sm=\"2\" type=\"checkbox\" label=\"Remember Me\" />\r\n                                        </Form.Group>\r\n                                        <br />\r\n                                        <div >\r\n                                            <Button className=\"button\" onClick={e => siginin(e)}>\r\n                                                Login\r\n                                            </Button>\r\n                                        </div>\r\n                                        <br /> <br />\r\n                                    </Form>\r\n                                </div>\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                </Container>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Login\r\n\r\n\r\n","export const MenuList = [\r\n    {\r\n      title: \"Home\",\r\n      url: \"/\",\r\n    },\r\n    {\r\n      title: \"user\",\r\n      url: \"/user\",\r\n    },\r\n    {\r\n      title: \"Logout\",\r\n      url: \"/demo\",\r\n    },\r\n  ];","import React, { useState } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { MenuList } from \"./MenuList\";\r\nimport \"./Header.css\";\r\n\r\nconst Header = () => {\r\n  const [clicked, setClicked] = useState(false);\r\n  const menuList = MenuList.map(({ url, title }, index) => {\r\n    return (\r\n      <li key={index}>\r\n        <NavLink exact to={url} activeClassName=\"active\">\r\n          {title}\r\n        </NavLink>\r\n      </li>\r\n    );\r\n  });\r\n\r\n  const handleClick = () => {\r\n    setClicked(!clicked);\r\n  };\r\n\r\n  return (\r\n    <nav>\r\n      <div className=\"logo\">\r\n        Q&<font>A</font>\r\n      </div>\r\n      <div className=\"menu-icon\" onClick={handleClick}>\r\n        <i className={clicked ? \"fas fa-times\" : \"fas fa-bars\"}></i>\r\n      </div>\r\n      <ul className={clicked ? \"menu-list\" : \"menu-list close\"}>{menuList}</ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Header;","import React from 'react'\r\nimport '../Home.css'\r\nimport {   Container, Row, Col, Card, Button } from 'react-bootstrap'\r\nimport Header from '../Component/Header'\r\n\r\nfunction Home() {\r\n    return (\r\n        <div>\r\n            <div>\r\n                <Header/>\r\n            </div>\r\n\r\n           \r\n            <div className=\"card\">\r\n\r\n                    {/* first Group Box */}\r\n\r\n                <Container>\r\n                    <Row>\r\n                        <Col >\r\n                            <Card style={{ width: '18rem' }}>\r\n                            <Card.Header >React</Card.Header>\r\n                            <Card.Body className=\"qbutton\">\r\n                              \r\n                                    <Button variant=\"primary\">Question</Button>\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </Col>\r\n                        <Col><Card style={{ width: '18rem' }}>\r\n                        <Card.Header >Python</Card.Header>\r\n                        <Card.Body className=\"qbutton\">\r\n                                <Button variant=\"primary\">Question</Button>\r\n                            </Card.Body>\r\n                        </Card></Col>\r\n                        <Col>\r\n                        <Card style={{ width: '18rem' }}>\r\n                        <Card.Header >Java</Card.Header>\r\n                        <Card.Body className=\"qbutton\">\r\n                                <Button variant=\"primary\">Question</Button>\r\n                            </Card.Body>\r\n                        </Card></Col>\r\n                    </Row>\r\n                </Container>\r\n             <br/>\r\n             {/* second Group Box */}\r\n\r\n                <Container>\r\n                    <Row>\r\n                        <Col >\r\n                            <Card style={{ width: '18rem' }}>\r\n                            <Card.Header >Angular</Card.Header>\r\n                            <Card.Body className=\"qbutton\">\r\n                                    <Button  variant=\"primary\">Question</Button>\r\n                                    </Card.Body>\r\n                                \r\n                            </Card>\r\n                        </Col>\r\n                        <Col>\r\n                        <Card style={{ width: '18rem' }}>\r\n                        <Card.Header >Vue js</Card.Header>\r\n                        <Card.Body className=\"qbutton\">\r\n                                <Button variant=\"primary\">Question</Button>\r\n                            </Card.Body>\r\n                        </Card></Col>\r\n                        <Col>\r\n                        <Card style={{ width: '18rem' }}>\r\n                        <Card.Header >Node js</Card.Header>\r\n                        <Card.Body className=\"qbutton\">\r\n                                <Button variant=\"primary\">Question</Button>\r\n                            </Card.Body>\r\n                        </Card></Col>\r\n                    </Row>\r\n                </Container>\r\n                <br/>  \r\n                    {/* Third Group Box */}\r\n\r\n                <Container>\r\n                    <Row>\r\n                        <Col >\r\n                            <Card style={{ width: '18rem' }}>\r\n                            <Card.Header >c#</Card.Header>\r\n                            <Card.Body className=\"qbutton\">\r\n                                    <Button variant=\"primary\">Question</Button>\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </Col>\r\n                        <Col>\r\n                        <Card style={{ width: '18rem' }}>\r\n                        <Card.Header >C++</Card.Header>\r\n                        <Card.Body className=\"qbutton\">\r\n                                <Button variant=\"primary\">Question</Button>\r\n                            </Card.Body>\r\n                        </Card></Col>\r\n                        <Col>\r\n                        <Card style={{ width: '18rem' }}>\r\n                        <Card.Header>Asp.net</Card.Header>\r\n                        <Card.Body className=\"qbutton\">\r\n                                <Button variant=\"primary\">Question</Button>\r\n                            </Card.Body>\r\n                        </Card>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import './App.css';\nimport Login from './Component/Login';\n\nimport Home from './Component/Home';\n// import Quiz from './Component/Quiz';\nimport {BrowserRouter as Router, Route,Switch} from 'react-router-dom'\n\n\n\nfunction App() {\n  return (\n   \n    <div className=\"app\">\n    <Router>\n    <Switch>\n    <Route>\n     <Route path=\"/\" exact   component={Login}/>\n     <Route path=\"/home\"  component={Home}/>\n    \n    </Route>\n    </Switch>\n     \n   \n    \n      {/* <Home/> */}\n      {/* <Quiz/> */}\n    </Router>\n    </div>\n    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}